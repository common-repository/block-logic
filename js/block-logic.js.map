{"mappings":"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","sources":["node_modules/lodash.assign/index.js","src/js/block-logic.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n","import assign from 'lodash.assign';\n\nconst { createHigherOrderComponent } = wp.compose;\nconst { Fragment } = wp.element;\nconst { InspectorAdvancedControls } = wp.blockEditor;\nconst { TextareaControl } = wp.components;\nconst { addFilter } = wp.hooks;\nconst { __ } = wp.i18n;\n\n/**\n * Add layout control attribute to block.\n *\n * @param {object} settings Current block settings.\n * @param {string} name Name of block.\n *\n * @returns {object} Modified block settings.\n */\nconst addBlockLogicControlAttribute = ( settings, name ) => {\n\t// The freeform (Classic Editor) block is incompatible because it does not\n\t// support custom attributes.\n\tif ( settings.name === 'core/freeform' ) {\n\t\treturn settings;\n\t}\n\n\tif (typeof settings.attributes !== 'undefined') {\n\t\tconst attributes = {\n\t\t\tblockLogic: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t}\n\n\t\t// Use Lodash's assign to gracefully handle if attributes are undefined\n\t\tsettings.attributes = assign(settings.attributes, attributes);\n\t\tsettings.supports = assign( settings.supports, {\n\t\t\tblockLogic: true,\n\t\t} );\n\t}\n\n\treturn settings;\n};\n\naddFilter( 'blocks.registerBlockType', 'blockLogic/attribute', addBlockLogicControlAttribute );\n\n/**\n * Create HOC to add layout control to inspector controls of block.\n */\nconst withLogicControl = createHigherOrderComponent( ( BlockEdit ) => {\n\treturn ( props ) => {\n\t\tconst { attributes, setAttributes, isSelected } = props;\n\t\tconst { blockLogic } = attributes;\n\n\t\t// add has-spacing-xy class to block\n\t\tif ( blockLogic ) {\n\t\t\tattributes.blockLogic = blockLogic;\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t{ isSelected &&\n\t\t\t\t<InspectorAdvancedControls>\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\tlabel={ __( 'Block Logic', 'block-logic' ) }\n\t\t\t\t\t\thelp={ __( 'Add valid PHP conditional tags or PHP condition that returns true or false.', 'block-logic' ) }\n\t\t\t\t\t\tvalue={ blockLogic ? blockLogic : '' }\n\t\t\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tblockLogic: newValue,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</InspectorAdvancedControls>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t};\n}, 'withLogicControl' );\n\naddFilter( 'editor.BlockEdit', 'blockLogic/control', withLogicControl );\n"],"names":["$91b55414c8526548$var$MAX_SAFE_INTEGER","$91b55414c8526548$var$argsTag","$91b55414c8526548$var$funcTag","$91b55414c8526548$var$genTag","$91b55414c8526548$var$reIsUint","$91b55414c8526548$var$apply","func","thisArg","args","length","call","apply","transform","$91b55414c8526548$var$objectProto","Object","prototype","$91b55414c8526548$var$hasOwnProperty","hasOwnProperty","$91b55414c8526548$var$objectToString","toString","$91b55414c8526548$var$propertyIsEnumerable","propertyIsEnumerable","$91b55414c8526548$var$nativeKeys","keys","arg","$91b55414c8526548$var$nativeMax","Math","max","$91b55414c8526548$var$nonEnumShadows","$91b55414c8526548$var$arrayLikeKeys","value","inherited","result","$91b55414c8526548$var$isArray","$91b55414c8526548$var$isObjectLike","$91b55414c8526548$var$isArrayLike","$91b55414c8526548$var$isArrayLikeObject","$91b55414c8526548$var$isArguments","n","iteratee","index","Array","$91b55414c8526548$var$baseTimes","String","skipIndexes","key","$91b55414c8526548$var$isIndex","push","$91b55414c8526548$var$assignValue","object","objValue","$91b55414c8526548$var$eq","undefined","test","$91b55414c8526548$var$isPrototype","Ctor","constructor","other","isArray","$91b55414c8526548$var$isLength","tag","$91b55414c8526548$var$isObject","$91b55414c8526548$var$isFunction","type","assigner","$91b55414c8526548$var$assign","source","props","customizer","newValue","$91b55414c8526548$var$copyObject","$91b55414c8526548$var$baseKeys","$91b55414c8526548$var$keys","start","arguments","array","otherArgs","this","$91b55414c8526548$var$baseRest","sources","guard","$91b55414c8526548$var$isIterateeCall","$91b55414c8526548$exports","createHigherOrderComponent","wp","compose","Fragment","element","InspectorAdvancedControls","blockEditor","TextareaControl","components","addFilter","hooks","__","i18n","settings","name","attributes","blockLogic","default","assign","supports","BlockEdit","setAttributes","isSelected","React","createElement","$6cb5e05e5b51b870$var$Fragment","$6cb5e05e5b51b870$var$InspectorAdvancedControls","$6cb5e05e5b51b870$var$TextareaControl","rows","label","help","onChange"],"version":3,"file":"block-logic.js.map"}